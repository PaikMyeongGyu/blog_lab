package com.search.search.board.domain;

import com.search.search.board.service.BoardDummyService;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

@SpringBootTest
class BoardDescriptionTest {

    @Autowired
    BoardDummyService boardDummyService;

    List<String> front = Arrays.asList(
            "나의", "너의", "우리의", "시대의", "오늘의", "어제의", "내일의", "그녀의", "그의", "누군가의",
            "모두의", "아무의", "이별의", "운명의", "기억의", "추억의", "사랑의", "인생의", "여행의", "꿈의",
            "행복의", "슬픔의", "기쁨의", "젊음의", "노래의", "음악의", "기술의", "역사의", "마음의", "생각의",
            "말의", "글의", "소리의", "시간의", "공간의", "자유의", "진실의", "거짓의", "빛의", "어둠의",
            "희망의", "절망의", "청춘의", "밤의", "낮의", "계절의", "바람의", "바다의", "하늘의", "별의",
            "달의", "태양의", "시작의", "끝의", "처음의", "마지막의", "친구의", "가족의", "연인의", "아이의",
            "어른의", "이름의", "존재의", "나무의", "꽃의", "길의", "강의", "산의", "도시의", "시골의",
            "비밀의", "전설의", "마법의", "모험의", "운명의", "축제의", "그림자의", "미지의", "먼 곳의", "가까운 곳의",
            "차가운", "따뜻한", "뜨거운", "고독의", "위로의", "치유의", "상처의", "약속의", "기적의", "우연의",
            "필연의", "미소의", "눈물의", "전쟁의", "평화의", "욕망의", "믿음의", "신념의", "내가", "우리가"
    );

    List<String> middle = Arrays.asList(
            "우아한", "사랑한", "차가운", "뜨거운", "따뜻한", "찬란한", "어두운", "밝은", "고요한", "시끄러운",
            "화려한", "소박한", "외로운", "다정한", "고독한", "행복한", "슬픈", "기쁜", "쓸쓸한", "푸른",
            "붉은", "하얀", "검은", "투명한", "희미한", "선명한", "잔잔한", "거친", "부드러운", "어설픈",
            "완벽한", "특별한", "평범한", "기묘한", "신비한", "조용한", "위대한", "작은", "커다란", "지나간",
            "새로운", "오래된", "낯선", "익숙한", "몽환적인", "현실적인", "환상적인", "달콤한", "씁쓸한", "비밀스러운",
            "순수한", "위험한", "안전한", "강렬한", "연약한", "피곤한", "지친", "활기찬", "생생한", "애틋한",
            "아름다운", "추억의", "잊혀진", "잃어버린", "찾아낸", "흐린", "맑은", "무거운", "가벼운", "친절한",
            "무심한", "성실한", "불안한", "평화로운", "우울한", "명랑한", "겸손한", "거만한", "매력적인", "비참한",
            "용감한", "소심한", "감미로운", "무서운", "잔인한", "위태로운", "독특한", "단순한", "복잡한", "날카로운",
            "부끄러운", "당당한", "조심스러운", "대담한", "솔직한", "은밀한", "지혜로운", "어리석은", "풍요로운", "메마른"
    );

    List<String> last = Arrays.asList(
            "프로그래밍", "알고리즘", "데이터베이스", "자바스크립트", "프레임워크", "아키텍처", "인터페이스", "애플리케이션", "마이크로서비스", "네트워크",
            "오픈소스", "라이브러리", "컨테이너", "쿠버네티스", "가상현실", "인공지능", "클라우드컴퓨팅", "머신러닝", "블록체인", "비트코인",
            "데이터사이언스", "빅데이터", "함수형프로그래밍", "모바일디바이스", "그래픽디자인", "사물인터넷", "시스템엔지니어링", "유저인터페이스", "객체지향언어", "하이퍼바이저",
            "가상머신", "오토메이션", "패턴인식", "네트워크보안", "딥러닝모델", "데이터분석가", "소프트웨어엔지니어", "프로덕트매니저", "데이터엔지니어", "소프트웨어테스팅",
            "컴퓨터그래픽스", "인터랙티브미디어", "리눅스운영체제", "소프트웨어아키텍트", "소프트웨어품질관리", "사용자경험디자인", "내추럴랭귀지프로세싱", "프론트엔드개발자", "백엔드엔지니어링", "프로그래밍언어론",
            "휴먼컴퓨터인터랙션", "리액티브프로그래밍", "지속적통합배포", "퍼포먼스최적화", "소프트웨어유지보수", "시스템모니터링툴", "소프트웨어개발방법론", "네트워크인프라스트럭처", "모바일어플리케이션개발", "클라우드서비스프로바이더",
            "엔터프라이즈애플리케이션", "소프트웨어디벨롭먼트킷", "멀티플랫폼프로그래밍", "데이터베이스매니지먼트", "컴퓨터비전엔지니어링", "소프트웨어개발프로세스", "가상프라이빗네트워크", "오브젝트오리엔티드프로그래밍", "인티그레이티드디벨롭먼트환경", "인터넷서비스프로바이더",
            "풀스택소프트웨어개발자", "콘텐츠매니지먼트시스템", "모바일인터페이스디자인", "데이터시각화대시보드", "소프트웨어라이선스관리", "오픈소스컨트리뷰터", "비즈니스인텔리전스", "트랜잭션처리시스템", "소프트웨어버전컨트롤", "소프트웨어배포자동화",
            "분산컴퓨팅시스템", "하이퍼텍스트마크업언어", "소프트웨어프로젝트관리", "그래픽사용자인터페이스", "소프트웨어테스트자동화", "크로스플랫폼개발환경", "메시지큐잉시스템", "소프트웨어빌드도구", "애자일소프트웨어개발", "하이퍼텍스트전송프로토콜",
            "모델뷰컨트롤러패턴", "지속적인통합환경", "프로세스자동화도구", "테스트주도개발방법론", "시스템통합테스트환경", "소프트웨어성능테스트", "데이터웨어하우스모델링", "클라이언트서버아키텍처", "이벤트드리븐아키텍처", "소프트웨어요구사항분석"
    );

        @Test
        void test() {
            for (int i = 0; i < 1000000; i++) {
                if (i > 0 && i % 500 == 0) {
                    List<String> titles = new ArrayList<>();
                    for (int j = 500; j > 0; j--) {
                        String word1 = front.get(((i-j)/ 10000) % 100);
                        String word2 = middle.get(((i-j) / 100) % 100);
                        String word3 = last.get((i-j) % 100);

                        StringBuilder sb = new StringBuilder();
                        titles.add(sb.append(word1).append(" ").append(word2).append(" ").append(word3).toString());
                    }
                    boardDummyService.insertThousandData(titles);
                }
            }
        }
}